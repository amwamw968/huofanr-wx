<style lang="sass">
.container
  padding: 10px

.card_box
  margin-top: 20rpx
  padding: 20rpx
  background: #fff
  font-size: 26rpx
  color: #666

.header
  color: #333
  height: 30px
  font-size: 30rpx
  line-height: 30px

.footer
  margin-top: 10rpx
  padding-top: 10rpx
  height: 30px
  line-height: 30px
  border-top: 1px #ececec solid
</style>

<template>
<view class="container">
  <view class="card_box" wx:for="{{addressList}}" wx:key>
    <view class="header">
      <text>{{item.receiver_name}}</text>
      <test class="fr">{{item.receiver_mobile_show}}</test>
    </view>
    <text class="address ellipsis fz24 c999">{{item.receiver_address}}</text>
    <view class="footer">
      <text
        class="i mr10 {{item.is_default ? 'i-checked' : 'i-circle'}}"
        @tap="changeDefault({{item.is_default ? '' : item.member_address_id}})">
      </text>
      <text>默认地址</text>
      <view class="fr" @tap="deleteAddress({{item.member_address_id}})">
        <wxc-icon type="delete" size="28"></wxc-icon>
        删除
      </view>
    </view>
  </view>

  <button class="mt40 zan-btn zan-btn--large zan-btn--danger" @tap="addAddress">添加新地址</button>
</view>
</template>

<script>
import wepy from 'wepy'

export default class Address extends wepy.page {
  config = {
    navigationBarTitleText: '地址管理',
    usingComponents: {
      'wxc-icon': '/minui/@minui/wxc-icon/_dist/index',
    },
  }

  data = {
    addressList: [],
  }

  onLoad() {
    this._fetchAddressList()
  }

  async _fetchAddressList() {
    this.addressList = await wepy.request('member/address_list')
    this.$apply()
  }

  methods = {
    async addAddress() {
      const res = await wepy.chooseAddress()
      if (res) {
        console.log(res)
      }
    },

    async changeDefault(member_address_id) {
      if (!member_address_id) return
      wepy.request({
        url: 'member/set_address_default',
        method: 'POST',
        data: {
          member_address_id,
        },
      }).then(_ => {
        this.addressList = this.addressList.map(item => {
          if (item.member_address_id === member_address_id) {
            return {
              ...item,
              is_default: 1,
            }
          }
          return {
            ...item,
            is_default: 0,
          }
        })
        this.$apply()
      })
    },

    async deleteAddress(member_address_id) {
      wepy.request({
        url: 'member/address_delete',
        method: 'POST',
        data: {
          member_address_id,
        },
      }).then(_ => {
        this.addressList = this.addressList.filter(item => item.member_address_id !== member_address_id)
        this.$apply()
      })
    },
  }
}
</script>
