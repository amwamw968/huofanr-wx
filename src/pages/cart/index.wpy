<style lang="sass">
.container
  margin-bottom: 80rpx

.goods_group
  padding-bottom: 20rpx
  width: 100%
  height: auto
  border-bottom: 1px #ececec solid

.goods_card
  position: relative
  margin-bottom: 10px
  padding: 16rpx 20rpx 16px 10rpx
  display: flex
  width: 100%
  height: 240rpx
  color: #999
  background: #fff

  .icon_delete
    position: absolute
    right: 0
    top: 0
    padding: 10rpx

  >.checkbox
    width: 60rpx
    text-align: center
    line-height: 200rpx

  .image
    margin-right: 20rpx
    width: 200rpx
    height: 200rpx

  >.info
    padding-right: 14px
    display: flex
    font-size: 28rpx
    flex-direction: column
    align-content: space-between

    .num_box
      height: 60rpx
      line-height: 74rpx

.footer
  position: fixed
  bottom: 0
  left: 0
  z-index: 10
  display: flex
  width: 100%
  height: 80rpx
  line-height: 80rpx
  background: #fff
  border-top: 1rpx #ececec solid
  font-size: 28rpx

  .checkbox
    padding: 0 20rpx

  >.btn
    margin-left: 10px
    width: 180rpx
    line-height: 80rpx
    height: 80rpx
    border-radius: 0

</style>
<template lang="pug">
view.container.pb40
  view.goods_group
    view.goods_card(wx:for="{{goodsList}}" wx:key)
      text.checkbox.i(class="{{item.isSelect ? 'i-checked' : 'i-circle'}}" @tap.stop="selectHandle({{item.goods_cart_id}})")
      navigator(open-type="navigate" url="/pages/goods/index?goods_id={{item.goods_id}}")
        image.image(src="{{item.head_img}}")
      .info.flex1
        wxc-elip.flex1(line="2") {{item.goods_name}}
        .num_box
          wxc-price.color(value="{{item.price / 100}}" decimal="small")
          wxc-counter.fr(number="{{item.goods_count}}" max="{{99}}" min="1" bind:changenumber="onChangeNumber({{item.goods_cart_id}})")
      wxc-icon.icon_delete(type="delete" size="24" color="#999" @tap.stop="deleteGoods({{item.goods_cart_id}})")

  view.footer
    .checkbox_box.flex1(@tap="selectAll")
      text.checkbox.i(class="{{isSelectAll ? 'i-checked' : 'i-circle'}}")
      text 全选
    .felx2
      text.color.tr ￥{{amount}}
      //- text.fz20 （包邮）
    button.btn.zan-btn.zan-btn--danger.zan-btn--small(
      disabled="{{!settleEnable}}"
      class="{{!settleEnable ? 'zan-btn--disabled' : ''}}"
      @tap="settle"
    ) 去结算
</template>

<script>
import wepy from 'wepy'
import { Debounce } from 'js/utli'

export default class Cart extends wepy.page {
  config = {
    navigationBarTitleText: '购物车',
    usingComponents: {
      'wxc-counter': '../../packages/@minui/wxc-counter/dist/index',
      'wxc-price': '../../packages/@minui/wxc-price/dist/index',
      'wxc-elip': '../../packages/@minui/wxc-elip/dist/index',
      'wxc-icon': '../../packages/@minui/wxc-icon/dist/index',
    },
  }

  data = {
    goodsList: [],
    isSelectAll: false,
  }

  computed = {
    settleEnable() {
      return this.goodsList.some(item => item.isSelect)
    },
    amount() {
      return this.goodsList.reduce((sum, goods) => sum + (goods.isSelect ? goods.price * goods.goods_count : 0), 0) / 100
    },
  }

  onRoute() {
    this.fetchGoodsList()
  }

  onShareAppMessage() {
    return {
      title: '活范儿嗨购——国内领先的跨境购物商城',
      path: '/pages/index/index',
    }
  }

  async fetchGoodsList() {
    const res = await wepy.request('cart/list')
    this.goodsList = res.map(item => ({
      ...item,
      isSelect: this.isSelectAll,
    }))
    this.$apply()
  }

  updateCount = Debounce((goods_cart_id, goods_count) => {
    wepy.request({
      url: 'cart/update_count',
      method: 'POST',
      data: {
        goods_cart_id,
        goods_count,
      },
    })
  }, 300, true)

  methods = {
    onChangeNumber(goods_cart_id, e) {
      this.goodsList = this.goodsList.map(item => ({
        ...item,
        goods_count: goods_cart_id === item.goods_cart_id ? e.detail.number : item.goods_count,
      }))
      this.updateCount(goods_cart_id, e.detail.number)
    },

    selectHandle(goods_cart_id) {
      this.goodsList = this.goodsList.map(item => ({
        ...item,
        isSelect: goods_cart_id === item.goods_cart_id ? !item.isSelect : item.isSelect,
      }))
    },

    deleteGoods(goods_cart_id) {
      wepy.request({
        url: 'cart/delete',
        method: 'POST',
        data: {
          goods_cart_id,
        },
      }).then(_ => {
        this.goodsList = this.goodsList.filter(item => item.goods_cart_id !== goods_cart_id)
        this.$apply()
      })
    },

    selectAll() {
      const isSelectAll = this.isSelectAll
      this.goodsList = this.goodsList.map(item => ({
        ...item,
        isSelect: !isSelectAll,
      }))
      this.isSelectAll = !isSelectAll
    },

    settle() {
      const goods_cart_ids = this.goodsList.filter(item => item.isSelect).map(item => item.goods_cart_id).join(',')
      this.$navigate('/pages/cart/pay', {
        goods_cart_ids,
      })
    },
  }
}
</script>
