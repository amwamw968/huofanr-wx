<style lang="sass">
.search_container
  display: flex
  line-height: 72rpx

.search_box
  display: flex
  width: 100%
  height: 72rpx
  line-height: 72rpx
  background: #fff
  border-radius: 6px

  >.search_ipt
    flex: 1
    margin-top: 6rpx
    height: 60rpx
    font-size: 28rpx
    padding-left: 10px

  >.search_icon
    width: 60rpx
    text-left: center
    color: #999

.order_list
  padding-left: 20rpx
  height: 80rpx
  display: flex
  line-height: 80rpx
  background: #fff
  border-top: 1px #ececec solid
  border-bottom: 1px #ececec solid

  >.item
    text-align: center
    width: 120rpx
    font-size: 28rpx

    .icon
      vertical-align: middle
      width: 30rpx
      height: 30rpx

.goods_list
  padding: 20rpx 10rpx
  width: 100%
  background: #fff
  font-size: 0

.goods_card
  margin: 10rpx
  padding: 20rpx
  width: calc(50% - 20rpx)
  display: inline-block
  border: 1px #ececec solid

  >.image
    margin-bottom: 5px
    width: 100%
    height: 320rpx

  >.price
    margin-bottom: -10rpx
    height: 40rpx
    line-height: 40rpx

  >.subtitle
    height: 38rpx
    line-height: 38rpx
</style>

<template lang="pug">
view.container
  Container.search_container(topBottom="10")
    view.search_box.flex1
      input.search_ipt(
        @input="bindKeyword"
        placeholder="搜索商品"
        placeholder-style="color: #999"
        focus value="{{keyword}}"
        confirm-type="search"
        @confirm="handleSearch"
      )
      wxc-icon.search_icon(wx:if="{{keyword}}" type="close" size="26" @tap="clearKeyword")

    view.fz28.ml20(wx:if="{{keyword}}" @tap="handleSearch") 搜索
    navigator.fz28.ml20(wx:else open-type="navigateBack" delta="1") 取消

  view.order_list
    view.item(class="{{sort === 'default' ? 'color' : ''}}" @tap="changeSort(default)")
      text 综合
    view.item(class="{{sort === 'sale' ? 'color' : ''}}" @tap="changeSort(sale)")
      text 销量
    view.item(class="{{sort === 'price' ? 'color' : ''}}" @tap="changeSort(price)")
      text 价格
      image.icon(src="/static/imgs/{{orderByImg}}.png")

  view.goods_list
    navigator.goods_card(wx:for="{{goodeList}}" wx:key open-type="navigate" url="/pages/goods/index?goods_id={{item.goods_id}}")
      image.image(src="{{item.head_img}}")
      view.ellipsis.fz24.c333 {{item.goods_name}}
      view.ellipsis.fz20.color_light.subtitle {{item.goods_desc}}
      view.price
        wxc-price.color.fz32(value="{{item.price}}")
        text.fr.fz20.c999 99.9%好评

</template>

<script>
import wepy from 'wepy'
import Container from '@/Container'

export default class Search extends wepy.page {
  config = {
    navigationBarTitleText: '搜索',
    usingComponents: {
      'wxc-icon': '/minui/@minui/wxc-icon/_dist/index',
      'wxc-price': '/minui/@minui/wxc-price/_dist/index',
    },
  }

  components = {
    Container,
  }

  computed = {
    orderByImg() {
      if (this.sort === 'price') {
        return this.sort_type ? 'icon_order_down' : 'icon_order_top'
      }
      return 'icon_order_default'
    }
  }

  data = {
    goodeList: [],
    total_pages: 0,
    keyword: '',
    goods_parent_category_id: '',
    goods_child_category_id: '',
    page_num: 1,
    sort: 'default', // 排序：default：综合-默认，sale：销量，price：价格
    sort_type: true, // 高->低：desc => true，低到高：asc => false
  }

  onLoad({goods_parent_category_id = '', goods_child_category_id = ''}) {
    this.goods_parent_category_id = goods_parent_category_id
    this.goods_child_category_id = goods_child_category_id
    this.fetchData()
  }

  fetchData() {
    const data = {
      keyword: this.keyword,
      goods_parent_category_id: this.goods_parent_category_id,
      goods_child_category_id: this.goods_child_category_id,
      page_num: this.page_num,
    }
    wepy.request({
      url: 'goods/list',
      data,
    }).then(res => {
      this.goodeList = res.list
      this.total_pages = res.total_pages
    })
  }

  methods = {
    bindKeyword(e) {
      this.keyword = e.detail.value.trim()
    },

    clearKeyword() {
      this.keyword = ''
    },

    handleSearch() {
    },

    changeSort(sort) {
      this.sort = sort
      if (sort === 'price') {
        this.sort_type = !this.sort_type
      } else {
        this.sort_type = true
      }
    },
  }
}
</script>
